name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Tests on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        run: |
          rustup toolchain install nightly --component rust-src --component llvm-tools
          rustup default nightly
      - name: Install grcov
        run: cargo install grcov
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
          RUSTFLAGS: "--cfg tokio_unstable -Cinstrument-coverage -Ccodegen-units=1 -Cllvm-args=--inline-threshold=0 -Coverflow-checks=off -Cpanic=unwind -Zpanic_abort_tests"
          RUSTDOCFLAGS: "--cfg tokio_unstable -Cinstrument-coverage -Ccodegen-units=1 -Cllvm-args=--inline-threshold=0 -Coverflow-checks=off -Cpanic=unwind -Zpanic_abort_tests"
      - name: Generate Coverage Report
        run: |
          mkdir -p coverage
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o coverage/lcov.info
      - name: Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          fail_ci_if_error: true # optional (default = false)
          flags: unittests # optional
          token: ${{ secrets.CODECOV_TOKEN }} # required
          verbose: true # optional (default = false)
